using System.Collections.Generic;
using UnityEngine;

[RequireComponent(typeof(Explosion))]

public class CubeSpawner : MonoBehaviour
{
    [SerializeField] private List<Cube> _cubes;
    private Explosion _explode;
    private int _divider = 2;
    private int _minCubes = 2;
    private int _maxCubes = 7;

    private void Awake()
    {
        _explode = GetComponent<Explosion>();
    }

    private void OnEnable()
    {
        foreach (var cube in _cubes)
        {
            cube.Clicked += HandleCubeClicked;
        }
    }

    private void OnDisable()
    {
        foreach (var cube in _cubes)
        {
            cube.Clicked -= HandleCubeClicked;
        }
    }

    private void HandleCubeClicked(Cube cube)
    {
        CreateCubes(cube);
    }

    private void CreateCubes(Cube cube)
    {
        List<Cube> cubesToExplode = new List<Cube>();
        int randomNumber = Random.Range(_minCubes, _maxCubes);

        cube.ChangeCubeColor();

        cube.transform.localScale /= _divider;
        Vector3 size = cube.GetSize();
        float sizeFactor = Mathf.Min(size.x, size.y, size.z);
        float explosionRadius = _explode._force / sizeFactor;
        float explosionForce = _explode._force * sizeFactor;  

        _explode.SetExplosionParameters(explosionRadius, explosionForce);

        for (int i = 0; i < randomNumber; i++)
        {
            cubesToExplode.Add(cube);
            cube = Instantiate(cube, cube.transform.localPosition, Quaternion.identity);
            cube.Clicked += HandleCubeClicked;
        }

        _explode.ExplodeLocal(cubesToExplode, cube.transform.localPosition);
        
        cube.Clicked -= HandleCubeClicked;
    }
}
